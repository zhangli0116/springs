1.mysql  127.0.0.1:3307/test 主库
         127.0.0.1:3308/test 从库
         127.0.0.1:3309/test 从库
mysql进行主从复制 配置

          目前部署在本地（下一步迁移到linux）

2.redis cluster 集群方式搭建 三主三从  linux部署

          主：    192.168.56.128:7000
                  192.168.56.128:7001
                  192.168.56.128:7002
          从：    192.168.56.128:7003
                  192.168.56.128:7004
                  192.168.56.128:7005


3.rabbitmq 192.168.56.128：5672  admin 123456 （下一步集群配置）


4.整合quartz 集群  127.0.0.1:3301/test qrtz_xxxx


springboot通过
VM options  -Dserver.port=8090方法来配置启动参数




LEARNING

--------------------------------------------------------------

spring controller 多线程单实例后台相应模型  -> 展开学习
默认有10个线程
 nio 1-9  io 10

--------------------------------------------------------------

spring web ->spring web flux（5.0+） 支持异步等  -> 展开学习

restful -> webclient


--------------------------------------------------------------

spring boot amqp接口标准

--------------------------------------------------------------

nio 流

--------------------------------------------------------------

spring boot quartz 整合 ok

--------------------------------------------------------------

node.js 后台  使用react.js 或 vue.js 进行前后端分离

--------------------------------------------------------------

数据发送与接收问题 client - server
post/get请求

post请求发送json格式数据  -> 返回json格式数据

--------------------------------------------------------------

redis继续学习 lua脚本的使用


-------------------------------------------------------------

spring websocket 使用 （整合mq消息队列）


------------------------------------------------------------

rabbitmq 的 rabbitmqctl 命令薄弱

-----------------------------------------------------------

spring cloud 使用