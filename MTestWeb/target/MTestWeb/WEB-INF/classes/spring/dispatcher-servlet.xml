<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.1.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.1.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.1.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.1.xsd ">
		
		<!-- 配置注解映射器和适配器,json解析装换器 等价于注解 @EnableWebMvc-->
		<mvc:annotation-driven/> 
		
		<context:component-scan base-package="com.frame.springmvc.controller">
			<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
			<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
		</context:component-scan>
		
		<!-- DispatcherServlet不会拦截 mapping所表示的路径-->
		<!-- location 静态资源位置  ,mapping映射到服务上路径  注意mapping写法, /aaa/* 会导致无法匹配 /js/hello.js -->
		<!-- http://localhost:8080/MTestWeb/aaa/hello.html -->
		<!-- http://localhost:8080/MTestWeb/aaa/js/hello.js -->
		<mvc:resources location="/static/" mapping="/aaa/**"></mvc:resources>
		
		
		<!-- 对外提供服务 http://localhost:8080/userService  需要配置在 dispatcher下-->
		<!--httpInvoker 服务器端设置  使用springmvc URL映射配置  -->
		<bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
	        <property name="mappings">
	            <props>
	                <prop key="/userService">userHttpInvokerService</prop>
	            </props>
	        </property>
   		</bean>
		<!-- Announce that this interface is a HTTP invoker service. 宣布该接口是一个http invoker 服务 -->
		<bean name="userHttpInvokerService" class="org.springframework.remoting.httpinvoker.HttpInvokerServiceExporter">
			 <property name="service" ref="userService"/>
        	 <property name="serviceInterface" value="com.frame.springmvc.service.UserService"/>
		</bean>
		
		<!--模板信息配置-->  
        <bean id="velocityConfigurer" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">  
            <property name="resourceLoaderPath" value="/WEB-INF/template/" /><!-- 模板存放的路径 -->
            <property name="velocityProperties">    
	        <props>    
	            <prop key="directive.foreach.counter.name">loopCounter</prop>    
	            <prop key="directive.foreach.counter.initial.value">0</prop>    
	            <prop key="input.encoding">UTF-8</prop><!-- 指定模板引擎进行模板处理的编码 -->    
	            <prop key="output.encoding">UTF-8</prop><!-- 指定输出流的编码 -->    
	        </props>    
   			</property>     
        </bean>  
        
		<!-- velocity视图解析器 -->
		 <bean id="viewResolver" class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">  
	        <property name="cache" value="true" />  
	        <property name="prefix" value="" /><!-- 视图文件的前缀，即存放的路径 -->  
	        <property name="suffix" value=".html" /><!-- 视图文件的后缀名 -->  
	       <!-- 	<property name="toolboxConfigLocation" value="/WEB-INF/tools.xml" />  --><!-- toolbox配置文件路径  配置后启动会报异常，原因未知--> 
	        <property name="dateToolAttribute" value="date" /><!--日期函数名称-->  
	        <property name="numberToolAttribute" value="number" /><!--数字函数名称-->  
	        <property name="contentType" value="text/html;charset=UTF-8" />  
	        <property name="exposeSpringMacroHelpers" value="true" /><!--是否使用spring对宏定义的支持-->  
	        <property name="exposeRequestAttributes" value="true" /><!--是否开放request属性-->  
	        <property name="exposeSessionAttributes" value="true"/>
	        <property name="requestContextAttribute" value="request"/><!--request属性引用名称-->  
	        <property name="order" value="1"/> <!-- 指定视图解析器的解析顺序 数字越小越先解析 -->
    	</bean>  
    	
		<!-- 视图解析器解析jsp解析，默认使用jstl标签，classpath下的得有jstl的包-->
		<!-- <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
			配置jsp路径的前缀
			<property name="prefix" value="/template/"/>
			配置jsp路径的后缀
			<property name="suffix" value=".jsp"/>
			 <property name="order" value="2"/> 
			<property name="toolboxConfigLocation" value="/WEB-INF/tools.xml" /><!–toolbox配置文件路径–>  
		</bean> -->
		
		<!-- 拦截器 -->
		<mvc:interceptors>
			<mvc:interceptor>
				<mvc:mapping path="/**"/>
				<bean class="com.frame.springmvc.interceptor.LoginInterceptor"/>
			</mvc:interceptor>
			
			<!-- <mvc:interceptor>
				<mvc:mapping path=""/>
				<bean></bean>
			</mvc:interceptor> -->
		</mvc:interceptors>
		
		
</beans>		